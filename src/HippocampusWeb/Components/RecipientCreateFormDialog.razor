@using HippocampusWeb.Values.Forms
@using HippocampusWeb.Data
@using HippocampusWeb.Values
@inject IHippocampusApiClient ApiClient

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h4">
            Criação de um Monitor
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText Typo="Typo.h6">
            Características do Monitor
        </MudText>
        <MudTextField @bind-Value="_form.Name" Variant="Variant.Outlined" Label="Nome"/>
        <MudTextField @bind-Value="_form.MacAddress" Variant="Variant.Outlined" Label="Endereço MAC"/>
        <MudSelect T="RecipientType" @bind-Value="_form.RecipientType" Label="Tipo do Recipient do Monitor" Variant="Variant.Outlined">
            @foreach (var recipientType in Enum.GetValues<RecipientType>())
            {
                <MudSelectItem Value="recipientType"/>
            }
        </MudSelect>
        <MudTextField
            @bind-Value="_form.MinHeight"
            InputType="InputType.Number"
            Variant="Variant.Outlined"
            Label="Altura Mínima (cm)"/>
        <MudTextField
            @bind-Value="_form.MaxHeight"
            InputType="InputType.Number"
            Variant="Variant.Outlined"
            Label="Altura Máxima (cm)"/>
        <MudTextField @bind-Value="_form.RecipientMonitorLinkedToMacAddress" Variant="Variant.Outlined" Label="Macaddress do Monitor Conectado"/>
    </DialogContent>
    <DialogActions>
        <MudButton
            Disabled="_processingForm"
            EndIcon="@Icons.Material.Filled.Check"
            Color="Color.Success"
            Variant="Variant.Filled"
            @onclick="CreateRecipient">
            @if (_processingForm)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Enviando...</MudText>
            }
            else
            {
                <MudText>Criar</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance? MudDialog { get; set; }

    readonly RecipientMonitorCreationForm _form = new();

    private bool _processingForm = false;

    async Task CreateRecipient()
    {
        _processingForm = true;
        var response = await ApiClient.PostRecipientMonitorAsync(_form);
        var isSuccess = response is not null ? true : false;
        _processingForm = false;
        MudDialog?.Close(DialogResult.Ok(isSuccess));
    }

}